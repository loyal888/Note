{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"5BAB5","rootPoint":{"objectClass":"CGPoint","x":360,"y":917.5},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"638U3","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"3KV4K","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"2Y5U4","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"E3913","lineColorHex":"#37C45A","text":"二分查找"},"objectClass":"NSArray"},"text":"查找"},"1":{"objectClass":"MindNode","ID":"MK4PK","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"2V16C","lineColorHex":"#37C45A","text":"冒泡"},"1":{"objectClass":"MindNode","ID":"8J83X","lineColorHex":"#37C45A","text":"选择"},"2":{"objectClass":"MindNode","ID":"7836Q","lineColorHex":"#37C45A","text":"快速排序"},"3":{"objectClass":"MindNode","ID":"2WM9N","lineColorHex":"#37C45A","text":"归并排序"},"objectClass":"NSArray"},"text":"排序"},"2":{"objectClass":"MindNode","ID":"85533","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"XG2M2","lineColorHex":"#37C45A","text":"1. 谈一谈一致性哈希算法。"},"1":{"objectClass":"MindNode","ID":"6301C","lineColorHex":"#37C45A","text":"2. 快排怎么实现"},"2":{"objectClass":"MindNode","ID":"2J77Z","lineColorHex":"#37C45A","text":"3. 手写二分查找"},"3":{"objectClass":"MindNode","ID":"MI24J","lineColorHex":"#37C45A","text":"4. 如何判断一个单链表是否有环"},"4":{"objectClass":"MindNode","ID":"6X71H","lineColorHex":"#37C45A","text":"5. 平衡二叉树的时间复杂度；"},"5":{"objectClass":"MindNode","ID":"J1JTZ","lineColorHex":"#37C45A","text":"6. 反转单链表"},"6":{"objectClass":"MindNode","ID":"KEFF1","lineColorHex":"#37C45A","text":"7. 合并多个单有序链表"},"7":{"objectClass":"MindNode","ID":"Y5626","lineColorHex":"#37C45A","text":"8. LRU 淘汰算法，用java自己实现一个LRU。"},"8":{"objectClass":"MindNode","ID":"5PC97","lineColorHex":"#37C45A","text":"15. 八大基本排序的时间，空间复杂度"},"9":{"objectClass":"MindNode","ID":"X3IM3","lineColorHex":"#37C45A","text":"16. 堆排序的原理"},"10":{"objectClass":"MindNode","ID":"467UY","lineColorHex":"#37C45A","text":"17. 树的几种遍历方式"},"objectClass":"NSArray"},"text":"面试题"},"objectClass":"NSArray"},"text":"排序算法"},"1":{"objectClass":"MindNode","ID":"0098V","lineColorHex":"#37C45A","text":"数组"},"2":{"objectClass":"MindNode","ID":"6RE27","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"498D1","lineColorHex":"#37C45A","text":"反转链表"},"1":{"objectClass":"MindNode","ID":"GC8A2","lineColorHex":"#37C45A","text":"判断链表是否成环，找到成环的交点。"},"objectClass":"NSArray"},"text":"链表"},"3":{"objectClass":"MindNode","ID":"R646B","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"9XECB","lineColorHex":"#37C45A","text":"两个队列实现栈"},"1":{"objectClass":"MindNode","ID":"85E5C","lineColorHex":"#37C45A","text":"两个栈实现队列"},"2":{"objectClass":"MindNode","ID":"PL8MF","lineColorHex":"#37C45A","text":"用java自己实现一个LRU。"},"objectClass":"NSArray"},"text":"栈和队列"},"4":{"objectClass":"MindNode","ID":"I34E8","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"UQS71","lineColorHex":"#37C45A","text":"二叉树遍历"},"1":{"objectClass":"MindNode","ID":"Y4D9C","lineColorHex":"#37C45A","text":"求二叉树中两个节点之间的最大距离。"},"2":{"objectClass":"MindNode","ID":"9MPBN","lineColorHex":"#37C45A","text":"任意一颗二叉树，求最大节点距离"},"3":{"objectClass":"MindNode","ID":"12U4O","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"O715H","lineColorHex":"#37C45A","text":"堆。什么是最小堆？什么是最大堆？在堆中怎么插入一个元素？"},"objectClass":"NSArray"},"text":"堆"},"objectClass":"NSArray"},"text":"树"},"5":{"objectClass":"MindNode","ID":"F6BMW","lineColorHex":"#37C45A","text":""},"6":{"objectClass":"MindNode","ID":"4JGEB","lineColorHex":"#37C45A","text":"《剑指Offer》"},"objectClass":"NSArray"},"text":"数据结构与算法"},"objectClass":"NSArray"},"text":""},"ID":"7F32S"}